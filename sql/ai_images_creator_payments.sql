-- ai_images_creator_payments.sql
-- 创建支付订单记录表
CREATE TABLE IF NOT EXISTS ai_images_creator_payments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  order_no VARCHAR(50) NOT NULL UNIQUE, -- 订单编号，唯一
  amount DECIMAL(10, 2) NOT NULL, -- 支付金额
  credits INT NOT NULL, -- 购买的点数
  status VARCHAR(20) NOT NULL DEFAULT 'pending', -- 支付状态：pending待支付, success成功, failed失败
  payment_type VARCHAR(20) DEFAULT 'alipay', -- 支付方式，如alipay/wxpay等
  trade_no VARCHAR(100), -- 支付平台交易号
  callback_data JSONB, -- 回调数据
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
  paid_at TIMESTAMP WITH TIME ZONE -- 支付成功时间
);

-- 添加订单号索引
CREATE INDEX IF NOT EXISTS idx_ai_images_creator_payments_order_no ON ai_images_creator_payments(order_no);

-- 添加用户ID索引
CREATE INDEX IF NOT EXISTS idx_ai_images_creator_payments_user_id ON ai_images_creator_payments(user_id);

-- 添加行级安全策略
ALTER TABLE ai_images_creator_payments ENABLE ROW LEVEL SECURITY;

-- 创建只允许用户查看自己记录的策略
CREATE POLICY "Users can view their own payment records"
  ON ai_images_creator_payments
  FOR SELECT
  USING (auth.uid() = user_id);

-- 创建服务端可查看和管理所有记录的策略
CREATE POLICY "Service role can manage all payment records"
  ON ai_images_creator_payments
  USING (auth.jwt() ->> 'role' = 'service_role');

-- 添加自动更新updated_at的触发器
CREATE OR REPLACE FUNCTION update_payment_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_payment_updated_at
BEFORE UPDATE ON ai_images_creator_payments
FOR EACH ROW EXECUTE FUNCTION update_payment_updated_at(); 